{"name": "test2", "status": "broken", "statusDetails": {"message": "airtest.core.error.TargetNotFoundError: 'Picture Template(qq音乐.png) not found in screen'", "trace": "self = <testcase.test_1.Test object at 0x000001E47FFCDD30>\n\n    def test2(self):\n      #点击web浏览器的百度页面的新闻按钮\n      news_path = 'news.png'\n      #点击web浏览器的新闻里面的网页按钮\n      internet_path = 'internet.png'\n      #点击pc端的qq音乐程序图标\n      qq_music_path = 'qq音乐.png'\n      abc_music_path = '播放.png'\n      connect_device('Windows:///')\n      ST.CVSTRATEGY = [\"surf\", \"tpl\"]\n      ST.FIND_TIMEOUT = 2\n      # touch(Template(news_path))\n      # touch(Template(internet_path))\n>     double_click(Template(qq_music_path))\n\ntest_1.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\utils\\logwraper.py:90: in wrapper\n    res = f(*args, **kwargs)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\core\\api.py:379: in double_click\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\utils\\logwraper.py:90: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(qq音乐.png), timeout = 2, threshold = None, interval = 0.5\nintervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding: %s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(qq音乐.png) not found in screen'\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\airtest\\core\\cv.py:80: TargetNotFoundError"}, "attachments": [{"name": "log", "source": "abbf3b95-77bf-4fd9-8368-b0fdbbb77f1d-attachment.txt", "type": "text/plain"}], "start": 1657633750135, "stop": 1657633752924, "uuid": "8f72d5c8-321e-49a8-9815-8e408ebc5e92", "historyId": "20690e64d49888f470404d4465cf9c66", "testCaseId": "7cef8c2a510bce4907efd404dc86b673", "fullName": "test_1.Test#test2", "labels": [{"name": "suite", "value": "test_1"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "12624-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_1"}]}