{"name": "test1", "status": "broken", "statusDetails": {"message": "TypeError: can't pickle module objects", "trace": "self = <testcase.test_login_demo.TestLogin object at 0x000001DAFF950240>\n\n    def test1(self):\n        _processes = []\n        for index in range(0, 18):\n            _process = multiprocessing.Process(target=test_login, args=(index,))\n>           _process.start()\n\ntest_login_demo.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\process.py:105: in start\n    self._popen = self._Popen(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\context.py:223: in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\context.py:322: in _Popen\n    return Popen(process_obj)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\popen_spawn_win32.py:65: in __init__\n    reduction.dump(process_obj, to_child)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = <Process(Process-1, initial)>, file = <_io.BufferedWriter name=5>\nprotocol = None\n\n    def dump(obj, file, protocol=None):\n        '''Replacement for pickle.dump() using ForkingPickler.'''\n>       ForkingPickler(file, protocol).dump(obj)\nE       TypeError: can't pickle module objects\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\reduction.py:60: TypeError"}, "start": 1658291415245, "stop": 1658291415255, "uuid": "30fd4e9d-f701-41b6-a0ff-52da78ce424f", "historyId": "35265c0960dc246b473ccf553ade111e", "testCaseId": "d2e04a00679f6587471ead4374067977", "fullName": "test_login_demo.TestLogin#test1", "labels": [{"name": "suite", "value": "test_login_demo"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "8032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login_demo"}]}