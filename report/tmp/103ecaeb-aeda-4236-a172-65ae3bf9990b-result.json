{"name": "test_start", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>echo '\\n 'python \\n'\\n 'python\\n'\\n '\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>print '\\n 'aa \\n'\\n '无法初始化设备 PRN\\n') == ('\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>echo  '\\n 'python \\n'\\n ' python\\n'\\n '\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>print '\\n 'aa \\n'\\n '无法初始化设备 PRN\\n')", "trace": "def test_start():\n      cmd='C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\1111.bat'\n      cmd1='C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\2222.bat'\n      aa=(os.popen(cmd).read())\n      bb=(os.popen(cmd1).read())\n>     assert aa==bb\nE     AssertionError: assert ('\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>echo '\\n 'python \\n'\\n 'python\\n'\\n '\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>print '\\n 'aa \\n'\\n '无法初始化设备 PRN\\n') == ('\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>echo  '\\n 'python \\n'\\n ' python\\n'\\n '\\n'\\n 'C:\\\\Users\\\\Administrator\\\\.jenkins\\\\workspace\\\\psimsendemail\\\\untitled\\\\testcase>print '\\n 'aa \\n'\\n '无法初始化设备 PRN\\n')\n\ntest_1.py:13: AssertionError"}, "start": 1652536731483, "stop": 1652536731520, "uuid": "21efcc4e-94f7-4c8e-9a81-15929bb9f846", "historyId": "d44ac5abb96825550b5e65356593b8e2", "testCaseId": "9f9609b8a4297851ce33d495f5c9c31f", "fullName": "test_1#test_start", "labels": [{"name": "suite", "value": "test_1"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "8200-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_1"}]}