{"name": "test_login[case5]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcase.test_login_demo.TestLogin object at 0x000002EFD8EAD198>\ncase = ['传入错误密码', 'password=123123,account=admin', '10003', 'password _error', '']\n\n    def test_login(self,case):\n        url = data[1][1]  # 接口URL\n        method = data[2][1]  #请求方法\n        d = (case[1])   #获取传入接口的参数\n        r = request(url=url,method=method,data=d)\n>       assert  int(case[2]) == r.json()['code']  #断言响应码\n\ntest_login_demo.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python36\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002EFD7A49358>\ns = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\\n  \"http://www.w3.org/TR/html4/loose.dtd\">\\n<html>\\n  ...n    account = request.value.get(\\'account\\')\\nAttributeError: \\'function\\' object has no attribute \\'value\\'\\n\\n-->\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:357: JSONDecodeError"}, "parameters": [{"name": "case", "value": "['传入错误密码', 'password=123123,account=admin', '10003', 'password _error', '']"}], "start": 1656753057194, "stop": 1656753057202, "uuid": "a0fedbd1-21f0-4965-b913-8ededd2d3b53", "historyId": "abf831a06eaa983c8495dcbb1d48d78a", "testCaseId": "635f167e9ec99310021d4ad82ace208f", "fullName": "test_login_demo.TestLogin#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.skipif(False, reason='此版本不测试')"}, {"name": "suite", "value": "test_login_demo"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "22484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login_demo"}]}