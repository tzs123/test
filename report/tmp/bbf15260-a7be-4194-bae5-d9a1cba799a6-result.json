{"name": "测试用例描述：正确的账号密码登录成功", "status": "broken", "statusDetails": {"message": "TypeError: setup() missing 1 required positional argument: 'driver'", "trace": "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x0000017D063A4730>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\_pytest\\nose.py:13: in pytest_runtest_setup\n    call_optional(item.parent.obj, \"setup\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = <testcase.test_four.Test object at 0x0000017D07548C18>, name = 'setup'\n\n    def call_optional(obj, name):\n        method = getattr(obj, name, None)\n        isfixture = hasattr(method, \"_pytestfixturefunction\")\n        if method is not None and not isfixture and callable(method):\n            # If there's any problems allow the exception to raise rather than\n            # silently ignoring them.\n>           method()\nE           TypeError: setup() missing 1 required positional argument: 'driver'\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\_pytest\\nose.py:38: TypeError"}, "description": "测试描述：正确的账号密码登录成功", "start": 1651822602508, "stop": 1651822602508, "uuid": "5953109b-a860-435a-94b2-0fa0b660e712", "historyId": "1a2fe18af852af85557a37dca4ea131b", "testCaseId": "c4abd6df2c1fb32ea5cc8bf06688822d", "fullName": "test_four.Test#test_01", "labels": [{"name": "story", "value": "登录"}, {"name": "severity", "value": "critical"}, {"name": "epic", "value": "xxx测试"}, {"name": "feature", "value": "登录模块"}, {"name": "suite", "value": "test_four"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "4728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_four"}]}