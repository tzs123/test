{"name": "测试用例描述：正确的账号密码登录成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"/html/body/div[3]/div/div[2]/div[1]/div/ul[1]/li[2]/a\"]\"}\n  (Session info: chrome=98.0.4758.102)", "trace": "self = <testcase.test_four.Test object at 0x000001EEA9F07C18>, action = None\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story(\"登录\")\n    @allure.description('测试描述：正确的账号密码登录成功')\n    @allure.title('测试用例描述：正确的账号密码登录成功')\n    def test_01(self,action):\n        self.driver = webdriver.Chrome()\n        self.driver.get(\"http://testingedu.com.cn:8000/index.php/Home/user/login.html\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(5)\n        with allure.step(\"输入正确账号\"):\n            allure.attach('{}'.format('13800138006'), name='正确账号')\n        self.driver.find_element_by_id(\"username\").send_keys('13800138006')\n        with allure.step(\"输入正确密码\"):\n            allure.attach('{}'.format('123456'), name='正确密码')\n        self.driver.find_element_by_id(\"password\").send_keys('123456')\n        with allure.step(\"输入正确验证码\"):\n            allure.attach('{}'.format('123'), name='正确验证码')\n        self.driver.find_element_by_id('verify_code').send_keys('123')\n        self.driver.find_element_by_name(\n            'sbtbutton').click()\n        time.sleep(2)\n        allure.attach(self.driver.get_screenshot_as_png(), \"截图\", allure.attachment_type.PNG)\n        with allure.step(\"点击我的订单\"):\n            allure.attach('ok',name='进入订单界面')\n>       self.driver.find_element_by_id(\"/html/body/div[3]/div/div[2]/div[1]/div/ul[1]/li[2]/a\").click()\n\ntest_four.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:360: in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EEA9F25160>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77777B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77777B44+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"/html/body/div[3]/div/div[2]/div[1]/div/ul[1]/li[2]/a\"]\"}\nE         (Session info: chrome=98.0.4758.102)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"}, "description": "测试描述：正确的账号密码登录成功", "steps": [{"name": "输入正确账号", "status": "passed", "attachments": [{"name": "正确账号", "source": "108d88fc-e294-40fc-bcd8-ff4215928e4e-attachment.attach"}], "start": 1651821709912, "stop": 1651821709913}, {"name": "输入正确密码", "status": "passed", "attachments": [{"name": "正确密码", "source": "74485992-ad89-4983-aa26-f7aa0934a50b-attachment.attach"}], "start": 1651821709951, "stop": 1651821709952}, {"name": "输入正确验证码", "status": "passed", "attachments": [{"name": "正确验证码", "source": "4da5d74a-ebcd-42d4-bfc1-802a2fb31139-attachment.attach"}], "start": 1651821710002, "stop": 1651821710002}, {"name": "点击我的订单", "status": "passed", "attachments": [{"name": "进入订单界面", "source": "4dbba59c-fb20-4271-bd53-416852d111ab-attachment.attach"}], "start": 1651821712547, "stop": 1651821712548}], "attachments": [{"name": "截图", "source": "98562653-b87e-4638-9f10-2342a2d4a698-attachment.png", "type": "image/png"}], "start": 1651821706861, "stop": 1651821717590, "uuid": "14d820d6-a8b1-467a-9e50-afc6eb93eda4", "historyId": "1a2fe18af852af85557a37dca4ea131b", "testCaseId": "c4abd6df2c1fb32ea5cc8bf06688822d", "fullName": "test_four.Test#test_01", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "epic", "value": "xxx测试"}, {"name": "story", "value": "登录"}, {"name": "severity", "value": "critical"}, {"name": "suite", "value": "test_four"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "MS-SLSXLICKSUSF"}, {"name": "thread", "value": "9788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_four"}]}